<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>KMP模版</title>
      <link href="/2023/02/22/kmp/"/>
      <url>/2023/02/22/kmp/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>  next<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token keyword">while</span><span class="token punctuation">(</span>j <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> needle<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> needle<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        j <span class="token operator">=</span> next<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>needle<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> needle<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        j<span class="token operator">++</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     next<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> haystack<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token keyword">while</span><span class="token punctuation">(</span>j <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> needle<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">!=</span> haystack<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        j <span class="token operator">=</span> next<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>needle<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">==</span> haystack<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        j<span class="token operator">++</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">==</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> i <span class="token operator">-</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用不减一的next生成方法。</p><p>next中的值代表多少个前后缀匹配。<br>next生成</p><ol><li>初始化</li><li>不匹配的时候跳转为前一个的next数组值</li><li>匹配的时候j++</li></ol>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>偷影子的人</title>
      <link href="/2023/02/02/tou-ying-zi-de-ren/"/>
      <url>/2023/02/02/tou-ying-zi-de-ren/</url>
      
        <content type="html"><![CDATA[<p>影子只是一个比喻，每个人心中都有未曾见人的秘密埋藏，许多童年的秘密往往对一个人性格形成至关重要，有人靠童年治愈一生，有人却要用一生治愈童年。<br>伊凡的童年被恐惧包裹并且由于母亲的离世使得他一直被困在枷锁中，对黑鸭的恐惧随着他长大也没有消除。主人公用一封伪造的信帮助他从童年的牢笼中解脱，不知道是否每个人的创伤或者执念都可以如此轻易地疗愈，但是感人的情节往往让人沉迷其中。小男孩帮助伊凡的行为是全书第一个动人的故事，也是他第一次靠着看到别人内心的秘密为影子点燃光芒。真正疗愈伊凡的是小男孩妈妈写给他的心，透露出的是每个父母对孩子寄托的希望，只希望孩子开心快乐的成长，做自己喜欢的事情，并无论爱或者被爱都能带着父母的期望。<br>就像马格的影子所说，小男孩虽然瘦小软弱，可是他善良的影子相比于马格的霸道更被影子们所欢迎，马格的影子可能象征的是自己被压抑的痛苦，痛恨主人的霸道，但是成因却是不完美的家庭，可能是父亲的责骂，家庭的冷漠氛围，性格成因往往都有迹可循。<br>吕克是他最好的朋友，他们之间的友谊让人羡慕不已，小男孩愿意为了不让朋友留有遗憾而帮助他实现做医生的梦想，在吕克追梦的时候我们看到，哪怕是实现魂牵梦绕的梦想可能也并不是达到真正可以让自己心安的结果，尝试做医生之后吕克反而更愿意做一个可以让早上第一个来买面包的顾客露出欣喜的微笑的面包师，并为自己父亲的职业所骄傲。梦想的意义有很多，时刻追逐梦想为之奋斗是一种，实现梦想后感悟真正所爱也是一种，我认为吕克是书中最幸福的人，实现梦想又领悟真正的心之所属（包括事业和爱人）。<br>主人公的爱情让人困惑不已，克莱儿的大提琴事业一定源于一句“你的笑声像大提琴一样清脆”，我自然可以理解克莱儿一直以来被当作聋哑人，后来遇到愿意和她交流做朋友的小男孩之后内心一定将他看作救世主般的村子，但主人公最后瞒着苏菲去追寻自己童年的回忆让人费解，苏菲一直以来的陪伴和关爱抵不过幼时许下的誓言，最后的情节可以认为是故意煽情或者说是罔顾现实而只活在梦中的所为。而<br>主人公的母亲展现出的是绝对的母爱，爱情的不顺利一定会让她也陷入生活的困惑中，可是处处对孩子展现绝对的爱，无私的奉献，对孩子的选择都会支持，也不会用亲情绑架孩子，也正如在那封信中写的一样，只盼望孩子可以快乐的茁壮成长，做自己喜欢的事情。虽然主人公唯一没有交流过的就是母亲的影子，不知道妈妈的内心藏着什么样的秘密，有着什么样的牵挂，但是我觉得这是在明线上所表达的，母亲的牵挂就是孩子，秘密也就是藏下的信（很单薄)。<br>主人公一直在用自己的“超能力”去治愈别人，可是自己的内心也留有困惑，一个是对父亲绝情的困惑，一个是爱情的困惑，哪怕是再充满光芒的太阳也很难照亮自己的内心。最后的疗愈草草了事，反而觉得这个角色没有吕克的鲜活。</p>]]></content>
      
      
      <categories>
          
          <category> reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reading </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/05/25/hello-world/"/>
      <url>/2022/05/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>5-23-高尔夫砍树</title>
      <link href="/2022/05/25/2022-5-23-gao-er-fu-kan-shu/"/>
      <url>/2022/05/25/2022-5-23-gao-er-fu-kan-shu/</url>
      
        <content type="html"><![CDATA[<h3 id="queue使用"><a href="#queue使用" class="headerlink" title="queue使用"></a>queue使用</h3><ul><li><p>add 和 offer使用，add在队列满的时候抛出异常，offer则会返回false用于判断，不回产生异常</p></li><li><p>poll和remove，同样remove会抛出异常，poll返回null</p></li><li><p>peek和element用于返回队列头，其中elemen在队列为空时抛出异常，peek则返回null</p></li><li><p><em>优先使用add，peek，poll</em></p></li></ul><h3 id="BFS模版"><a href="#BFS模版" class="headerlink" title="BFS模版"></a>BFS模版</h3><ol><li><p>不需要知道哪一层</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">while</span> queue 不空：cur <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> cur 有效且未被访问过：    进行处理<span class="token keyword">for</span> 节点 in cur 的所有相邻节点：    <span class="token keyword">if</span> 该节点有效：        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>该节点<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>需要知道哪一层</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">level <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> queue 不空：    size <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>size <span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        cur <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> cur 有效且未被访问过：            进行处理        <span class="token keyword">for</span> 节点 in cur的所有相邻节点：            <span class="token keyword">if</span> 该节点有效：                queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>该节点<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    level <span class="token operator">++</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
